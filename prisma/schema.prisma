// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String
  password    String 
  token       String?
  role        Role     @default(CUSTOMER)
  name        String 
  birthDate   DateTime

  reviews Review[]
  sellerProducts Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Type {
  id          Int      @id @default(autoincrement())
  name        String
  properties  Property[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Property {
  id          Int      @id @default(autoincrement())
  name        String

  type        Type @relation(fields: [typeId], references: [id])
  typeId      Int  

  categories CategoryProperty[]

  productProperty ProductProperty[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String

  properties CategoryProperty[]
  products Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CategoryProperty {
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    Int

  property      Property @relation(fields: [propertyId], references: [id])
  propertyId    Int

  @@id([categoryId, propertyId])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float

  properties ProductProperty[]

  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int

  seller      User @relation(fields: [sellerId], references: [id])
  sellerId    Int

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductProperty {
  id          Int      @id @default(autoincrement())
  value        String

  product    Product @relation(fields: [productId], references: [id])
  productId  Int

  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id          Int      @id @default(autoincrement())
  rating      String
  text        String

  user        User @relation(fields: [userId], references: [id])
  userId      Int

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  CUSTOMER
  SELLER
}